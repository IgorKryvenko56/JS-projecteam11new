{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-0e478213bdf6ae47.js","node_modules/@parcel/runtime-js/lib/runtime-736a81c2ae2b8e82.js","node_modules/@parcel/runtime-js/lib/runtime-5a14f9188ecfab5f.js","node_modules/@parcel/runtime-js/lib/runtime-76c8cd1a4f861856.js","src/js/shopping_list.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"fA2Vv\\\":\\\"shopping_books.fe6ccdac.js\\\",\\\"aTOk5\\\":\\\"amazon.681e64c0.png\\\",\\\"eAwa4\\\":\\\"Book.d2e82142.png\\\",\\\"26dpu\\\":\\\"BookShop.19aca9ae.png\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"aTOk5\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"eAwa4\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"26dpu\")).toString();","\nconsole.log('my_shopping-list-Серг');\n\n//http://localhost:1234/shopping_books.html\n\n\n// import {bookList} from './shopping_data.js';\n\n\n\n//     const bookList = JSON.parse(localStorage.getItem('bookList')) || [];\n//     bookList.push(bookDetails);\n//     localStorage.setItem('bookList', JSON.stringify(bookList));\n\n\n\n\n\nconst keyLockal = \"shoppingList\";\nconst shList = [\n    {\n        book_image: 'https://storage.googleapis.com/du-prd/books/images/9780063226050.jpg',\n        title: 'zxczxc',\n        list_name: 'Hardcover Fiction',\n        description: 'item-card-desc\">David Burroughs was once a devoted father to his three-year-old son Matthew, living a dream life just a short drive away from the working-class suburb where he and his wife, Cheryl, first fell in love--until one fateful night when David woke suddenly to discover Matthew had been murdered while',\n        author: \"Harlan Coben\",\n    },\n    {\n        book_image: 'https://storage.googleapis.com/du-prd/books/images/9780063226050.jpg',\n        title: 'qweqwe',\n        list_name: 'Hardcover Fiction',\n        description: 'item-card-desc\">David Burroughs was once a devoted father to his three-year-old son Matthew, living a dream life just a short drive away from the working-class suburb where he and his wife, Cheryl, first fell in love--until one fateful night when David woke suddenly to discover Matthew had been murdered while',\n        author: \"Harlan Coben\",\n    }\n];\n\n\n\nfunction saveShoppingList(shList) {\n    localStorage.setItem(keyLockal, JSON.stringify(shList));\n}\n\n// saveShoppingList(shList);\n\n\n\n\n// function saveShoppingList(shoppingList) {\n//     localStorage.setItem('shoppingList', JSON.stringify(shoppingList));\n//   }\n\n// function getShoppingList() {\n//     const shoppingList = localStorage.getItem('shoppingList');\n//     return shoppingList ? JSON.parse(shoppingList) : [];\n//   }\n\n\n\n\n// IMAGES\nimport Amazon from '../images/icon/amazon.png';\nimport Book from '../images/icon/Book.png';\nimport BookShop from '../images/icon/BookShop.png';\n\n\n// let booksLocalStorage = [1, 2, 3, 4, 5];\n\n// const titleEl = document.querySelector('.shopping-title');\n// titleEl.addEventListener('click', onRender);\n\nlet isMobileScreen = onMobileScreen(); //Мобильная версия? true. false\n\n\n\n\n\n\nconst bookList = getShoppingList();\nlet totalBook = bookList.length; //Всего книг в памяти\nconsole.log('bookList', bookList);\n\nfunction getShoppingList() {\n    const shoppingList = localStorage.getItem('shoppingList');\n    return shoppingList ? JSON.parse(shoppingList) : [];\n}\n\n\n\n\n\n\nlet perPage = makePerPage(); //Количество книг на странице      3 / 4 \nlet totalPage = Math.ceil(totalBook / perPage); //К-во страниц\nlet lastPerPage = makeLastPerPage(); //Остаток книг неполной страницы\n\nlet currentPage = 1; // Текущая страница / по умолчанию 1\nlet numberRender = 0; //Сколько пизиций рендирить\n\nlet howManyBtn = onHowManyBtn(); // Сколько кнопок TURN должно отбражаться 1-4\nlet currentBtn = 1; // текущая активная кнопка\nlet maxBtn = onmaxBtn(); //Максимальное ко-во кнопок  3 / 4\n\n\n\n\nconsole.log('totalBook', totalBook);\nconsole.log('perPage', perPage);\nconsole.log('totalPage', totalPage);\n// console.log('numberRender', numberRender);\nconsole.log('currentPage', currentPage);\nconsole.log('maxBtn', maxBtn);\nconsole.log('howManyBtn', howManyBtn);\n\n\n\nconst shoppingListEl = document.querySelector('.shopping-list'); // render shoppinglist\nconst emptyBookEl = document.querySelector('.empty-book-wrapper'); // empty-book\n\nlet removeBookBtns = [];\n\n\n\n//========= TURN Page ===============\nconst shoplistBtn = document.querySelector('.shopping-list-btn'); // Кнопки листания страниц\nshoplistBtn.addEventListener('click', onTurnPage);\n\nconst turnBtnsArray = document.querySelectorAll('.turn-number');  //Массив кнопок 1234\n    \n  \n    onShowButtons(); // Отображение кнопок\n    onWriteButtons(); // Подпись кнопок\n\n\n    function onTurnPage(event) {\n        if (event.target.nodeName !== \"BUTTON\") {\n            console.log('мимо');\n            return;\n        }\n        const selectedBtn = event.target.dataset.turn;\n        switch(selectedBtn) {\n            case 'start':\n                onTurnStartPage();\n            break;\n            case 'prev':\n                onTurnPrevPage();\n            break;\n\n            case '1':\n                if(currentBtn === 1 || currentPage > currentBtn) {\n                    break;\n                }\n                turnBtnsArray[currentBtn-1].classList.remove('turn-active');//remove Color\n                currentPage -= currentBtn - 1;\n                currentBtn = 1;\n                onRender();\n                onWriteButtons();\n            break;\n\n            case '2':\n                if(currentBtn !== 2) {\n                    turnBtnsArray[currentBtn-1].classList.remove('turn-active');//remove Color\n                    currentPage -= currentBtn - 2;\n                    currentBtn = 2;\n                    onRender();\n                    onWriteButtons();\n                }\n            break;\n\n            case '3':\n                if(currentBtn === 3 || ((totalPage - currentPage > maxBtn - currentBtn) && isMobileScreen)) {\n                    break;\n                }\n                \n                turnBtnsArray[currentBtn-1].classList.remove('turn-active');//remove Color\n                currentPage -= currentBtn - 3;\n                currentBtn = 3;\n                onRender();\n                onWriteButtons();\n            break;\n\n            case '4':\n                if(currentBtn === 4 || (totalPage - currentPage > maxBtn - currentBtn)) {\n                    console.log('totalPage - currentPage',totalPage - currentPage);\n                    console.log('maxBtn - currentBtn',maxBtn - currentBtn);\n                    break;\n                }\n                console.log('ok ok');\n                turnBtnsArray[currentBtn-1].classList.remove('turn-active');//remove Color\n                currentPage -= currentBtn - 4;\n                currentBtn = 4;\n                onRender();\n                onWriteButtons();\n            break;\n\n            case 'next':\n                onTurnNextPage();\n            break;\n            case 'end':\n                onTurnEndtPage()\n            // break;\n            // default:\n                //555 \n        }\n    }\n\n\n\n//========= TURN totalPageS Конец ===============\n\n\n\n\n\n\n// ======= DELETE BOOK ===========\n\nfunction onRemoveBook(event) {\n    //Видалення слухачів з кнопок\n    for (let i=0; i < numberRender; i++) {\n        removeBookBtns[i].removeEventListener('click', onRemoveBook);\n    }\n\n    // Видалення книжки по data-set\n    const numDataSet = Number(event.target.dataset.set);\n    const indexDelete = numDataSet + (currentPage - 1) * perPage;\n    bookList.splice(indexDelete, 1);\n    totalBook = bookList.length; //удалили книгу с памяти массива\n    saveShoppingList(bookList);\n\n    //Если книг нет Выход \n    if(!totalBook) { \n        onResetList();\n        return\n    }\n    // Если книги есть\n\n    //--Turn-------------------\n    let lastTotalPage = totalPage; // Прошлое количество страниц\n    totalPage = Math.ceil(totalBook / perPage); // Новое количество страниц\n\n    // Если стало на 1 страницу меньше\n    if(totalPage < lastTotalPage) {\n\n        howManyBtn = onHowManyBtn();\n\n        if(totalPage <= maxBtn) {\n            if(currentBtn > 1) {\n                turnBtnsArray[currentBtn-1].classList.remove('turn-active');//remove Color\n                currentBtn --;\n                currentPage --;\n            }\n        \n            onShowButtons();\n            onWriteButtons();\n        }\n        else {\n            if(currentPage > totalPage) {\n                currentPage = totalPage;\n                onWriteButtons();\n            }\n        }     \n       \n    }\n\n    lastPerPage = makeLastPerPage(); //Остаток книг\n    onRender(); \n}\n\n\n\n\n\n\n\n\n\n// ======= RENDER  Временно! ================\n\n// const renderBtn = document.querySelector('[data-render]');\n// renderBtn.addEventListener('click', onRender);\n\nfunction onRender() {\n    if(totalBook) { //Если книги есть\n        if(!emptyBookEl.classList.contains('is-hidden')) {\n            emptyBookEl.classList.add('is-hidden'); // ховаємо вікно відсутніх книжок\n        }\n        shoplistBtn.classList.remove('is-hidden');//відображаємо кнопки листання\n    }\n    else {\n        console.log('Книг нет');\n        return\n    }\n    numberRender = totalBook >= (currentPage * perPage) ? perPage : lastPerPage;\n\n    const x = (currentPage-1) * perPage;\n    const itemArr = []; //Массив для рендеру html \n    \n    for(let i=0; i< numberRender; i++) {\n        const markaup = `\n            <li class=\"shopping-item\">\n                <div class=\"item-card-thumb\">\n                    <img src=\"${bookList[i+x].book_image}\" alt=\"book\">\n                </div>       \n                <div class=\"item-card-wrap\">\n                    <h3 class=\"item-card-title\">${bookList[i+x].title}</h3>\n                    <p class=\"item-card-category\">${bookList[i+x].list_name}</p>\n                    <p class=\"item-card-desc\">${bookList[i+x].description}</p>       \n                    <div class=\"item-card-bottom-wrap\">\n                        <p class=\"item-card-author\">${bookList[i+x].author}</p>\n                        <ul class=\"item-card-stores-wrap\">\n                            <li class=\"item-card-icons\">\n                                <img src=${Amazon} width=\"32\" alt=\"b\">\n                            </li>\n                            <li class=\"item-card-icon\">\n                                <img src=${Book} width=\"30\" alt=\"b\">\n                            </li>\n                            <li class=\"item-card-icon\">\n                                <img src=${BookShop} width=\"30\" alt=\"b\">\n                            </li>\n                        </ul>\n                    </div>\n                    <button class=\"remove-btn\" data-set=\"${i}\">x</button>\n                </div>\n            </li>\n        `;\n        itemArr[i] = markaup;\n    }\n    const markaupAll = itemArr.join('');\n    shoppingListEl.innerHTML = markaupAll;  \n\n    // Чіпляємо слухачі на кнопки видалення\n    removeBookBtns = document.querySelectorAll('.remove-btn'); // []\n    for (let i=0; i < numberRender; i++) {\n        removeBookBtns[i].addEventListener('click', onRemoveBook);\n    }\n}\n\nonRender();\n\n\n\n// =============== FUNCTIONS ===============\n\n\n// ======= RESET ==========!\n\n// const resetBtn = document.querySelector('[data-reset]');\n// resetBtn.addEventListener('click', onResetList);\n\nfunction onResetList() {\n    emptyBookEl.classList.remove('is-hidden');\n    shoplistBtn.classList.add('is-hidden');\n    shoppingListEl.innerHTML = '';\n\n\n    // turnBtnsArray = [1, 2, 3, 4];\n    // turnBtnsArray = [firstBtnEl, secondBtnEl, thirdBtnEl, restBtnEl];\n\n    for(let i=0; i<turnBtnsArray.length; i++) {\n        if(turnBtnsArray[i].classList.contains('is-hidden')){\n            continue\n        }\n        turnBtnsArray[i].classList.add('is-hidden');\n    }\n\n\n\n    isMobileScreen = onMobileScreen(); //Мобильная версия? true. false\n    totalBook = bookList.length; //Всего книг в памяти\n    perPage = makePerPage(); //Количество книг на странице      3 / 4 \n    totalPage = Math.ceil(totalBook / perPage); //К-во страниц\n    lastPerPage = makeLastPerPage(); //Остаток книг неполной страницы\n\n    currentPage = 1; // Текущая страница / по умолчанию 1\n    numberRender = 0; //Сколько пизиций рендирить\n\n    howManyBtn = onHowManyBtn(); // Сколько кнопок TURN должно отбражаться 1-4\n    currentBtn = 1; // текущая активная кнопка\n    maxBtn = onmaxBtn(); //Максимальное ко-во кнопок  3 / 4\n    // turnBtnsArray = makeBtnsArr(); //создаем массив динамических кнопок пагинации\n    // onRenderButtons(); // отображаем динамические кнопки пагинации из массива\n    onShowButtons();\n    // onWriteButtons();\n\n    //классы прицепить\n\n}\n\n\n// NEXT\n\nfunction onTurnNextPage() {\n    if(currentPage < totalPage) {\n        if((currentBtn === maxBtn - 1) && (totalPage > currentPage + 1)) {\n            //write\n            currentPage ++;\n        }\n        else {\n            // move\n            turnBtnsArray[currentBtn-1].classList.remove('turn-active');//remove Color\n            currentPage ++;\n            currentBtn ++;\n        }\n        onRender();\n        onWriteButtons();\n    }\n}\n\n\n// PREVIOS\n\nfunction onTurnPrevPage() {\n    if(currentPage === 1) {\n        console.log('тиць');\n        return\n    }\n    if(currentBtn === 2 && currentPage > 2) {\n        //write\n        currentPage --;\n    }\n    else {\n        // move\n        turnBtnsArray[currentBtn-1].classList.remove('turn-active');//remove Color\n        currentPage --;\n        currentBtn --;\n    }\n    onRender();\n    onWriteButtons();\n}\n\n\n\n// START \n\nfunction onTurnStartPage() {\n    if(currentBtn === 1) {\n        console.log('тиць');\n        return\n    }\n    // move\n    turnBtnsArray[currentBtn-1].classList.remove('turn-active');//remove Color\n    currentPage = 1;\n    currentBtn = 1;\n    onRender();\n    onWriteButtons();\n}\n\n\n// END \n\nfunction onTurnEndtPage() {\n    if(currentBtn === howManyBtn) {\n        console.log('тиць');\n        return\n    }\n    // move\n    turnBtnsArray[currentBtn-1].classList.remove('turn-active');//remove Color\n    currentPage = totalPage;\n    currentBtn = howManyBtn;\n    onRender();\n    onWriteButtons();\n}\n\n\n\nfunction onMobileScreen() {\n    if(window.innerWidth > 767) {\n        return false;\n    }\n    return true;\n}\n\nfunction makePerPage() {\n    if(isMobileScreen) {\n        return 4;\n    }\n    return 3;\n}\n\nfunction makeLastPerPage() {\n    return totalBook % perPage;\n}\n\n\n\nfunction onHowManyBtn() {\n    if(isMobileScreen) {\n        return totalPage > 2 ? 3 : totalPage;\n    }\n    return totalPage > 3 ? 4 : totalPage;\n}\n\n\n\nfunction onmaxBtn() {\n    return isMobileScreen ? 3 : 4;\n}\n\n\n\n\n\n\n\n// Показываем кнопки\nfunction onShowButtons() {\n    for(let i=0; i< maxBtn; i++) {\n        if(!turnBtnsArray[i].classList.contains('is-hidden')) {\n            turnBtnsArray[i].classList.add('is-hidden');\n        }\n    }\n    for(let j=0; j< howManyBtn; j++) {\n        turnBtnsArray[j].classList.remove('is-hidden');\n    }\n}\n\n// Записываем значения\nfunction onWriteButtons() {\n    for(let i=0; i< howManyBtn; i++) {\n        if(currentPage - currentBtn && !i) {\n            turnBtnsArray[i].textContent = '...';\n        }\n        else if((totalPage - currentPage > maxBtn - currentBtn) && i === howManyBtn - 1) {\n            turnBtnsArray[i].textContent = '...';\n        }\n        else {\n            turnBtnsArray[i].textContent = currentPage - (currentBtn - 1) + i; //1\n        }\n    }\n    turnBtnsArray[currentBtn-1].classList.add('turn-active');// active Color\n}\n\n\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$d25d8406d80817f9$exports","URL","resolve","import","meta","url","toString","$96d875dc0379a63b$exports","$07e344d95402168f$exports","console","log","$bad122fcaab182c2$var$isMobileScreen","$bad122fcaab182c2$var$onMobileScreen","$bad122fcaab182c2$var$bookList","shoppingList","localStorage","getItem","$bad122fcaab182c2$var$getShoppingList","$bad122fcaab182c2$var$totalBook","$bad122fcaab182c2$var$perPage","$bad122fcaab182c2$var$makePerPage","$bad122fcaab182c2$var$totalPage","Math","ceil","$bad122fcaab182c2$var$lastPerPage","$bad122fcaab182c2$var$makeLastPerPage","$bad122fcaab182c2$var$currentPage","$bad122fcaab182c2$var$numberRender","$bad122fcaab182c2$var$howManyBtn","$bad122fcaab182c2$var$onHowManyBtn","$bad122fcaab182c2$var$currentBtn","$bad122fcaab182c2$var$maxBtn","$bad122fcaab182c2$var$onmaxBtn","$bad122fcaab182c2$var$shoppingListEl","document","querySelector","$bad122fcaab182c2$var$emptyBookEl","$bad122fcaab182c2$var$removeBookBtns","$bad122fcaab182c2$var$shoplistBtn","addEventListener","event","target","nodeName","dataset","turn","$bad122fcaab182c2$var$turnBtnsArray","classList","remove","$bad122fcaab182c2$var$onRender","$bad122fcaab182c2$var$onWriteButtons","$bad122fcaab182c2$var$onTurnStartPage","$bad122fcaab182c2$var$onTurnPrevPage","$bad122fcaab182c2$var$onTurnEndtPage","querySelectorAll","$bad122fcaab182c2$var$onRemoveBook","removeEventListener","indexDelete","Number","set","shList1","splice","setItem","stringify","add","innerHTML","contains","$bad122fcaab182c2$var$onShowButtons","$bad122fcaab182c2$var$onResetList","lastTotalPage","x","itemArr","markaup","book_image","title","list_name","description","author","$parcel$interopDefault","markaupAll","join","i1","window","innerWidth","j","textContent"],"version":3,"file":"shopping_books.fe6ccdac.js.map"}